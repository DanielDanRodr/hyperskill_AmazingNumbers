package numbers;
import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        System.out.println("Welcome to Amazing Numbers!/n");
        boolean programRuns = true;
        while (programRuns) {
            printInstructions();
            System.out.print("Enter a request: ");
            long input1 = scanner.nextLong();
            boolean single = true;
            if (input1 == 0) {
                programRuns = false;
                continue;
            }
            if (input1 < 0) {
                System.out.println("The first parameter should be a natural number or zero.");
                continue;
            }
            long input2 = 0;
            while (scanner.hasNext()) {
                single = false;
                input2 = scanner.nextLong();
                if (input2 == 0) {
                    programRuns = false;
                    continue;
                }
                if (input2 < 0) {
                    System.out.println("The second parameter should be a natural number.");
                    break;
                }
            }
            if (single) {
                oneNumber(input1);
            } else {
                twoNumbers(input1, input2);
            }
        }
    }

    // process methods
    public static void printInstructions() {
        System.out.println("Supported requests:");
        System.out.println("- enter a natural number to know its properties;");
        System.out.println("- enter two natural numbers to obtain the properties of the list:/n" +
                " * the first parameter represents a starting number;/n" +
                " * the second parameter shows how many consecutive numbers are to be processed;");
        System.out.println("- separate the parameters with one space;");
        System.out.println("- enter 0 to exit./n");
    }

    public static void oneNumber(long input) {
        System.out.println("Properties of " + input);
        System.out.println("even: " + isEven(input));
        System.out.println("odd: " + isOdd(isEven(input)));
        System.out.println("buzz: " + isBuzz(input));
        System.out.println("duck: " + isDuck(input));
        System.out.println("palindrome: " + isPalindrome(input));
        System.out.println("gapful: " + isGapful(input));
    }
    public static void twoNumbers(long input1, long input2) {
        for (int i = 0; i < input2; i++) {
            System.out.print((input1 + i) + " is ");
            properties((int) input1 + i);
        }
    }
    // check methods
    public static boolean isEven(long number) {
        return number % 2 == 0;
    }

    public static boolean isOdd(boolean even) {
        return !even;
    }

    public static boolean isBuzz(long number) {
        boolean isDivisible = number % 7 == 0;
        boolean endsWith7 = String.valueOf(number).endsWith("7");
        return isDivisible || endsWith7;
    }

    public static boolean isDuck(long number) {
        return String.valueOf(number).contains("0");
    }

    public static boolean isPalindrome(long number) {
        String inputAsString = String.valueOf(number);
        boolean palindrome = true;
        for (int i = 0; i <= (inputAsString.length() / 2); i++) {
            if (inputAsString.charAt(i) != inputAsString.charAt(inputAsString.length() - (i + 1))) {
                palindrome = false;
                break;
            }
        }
        return palindrome;
    }

    public static boolean isGapful(long number) {
        String inputAsString = String.valueOf(number);
        char firstNumberChar = inputAsString.charAt(0);
        char lastNumberChar = inputAsString.charAt(inputAsString.length() - 1);
        char concat = (char) (firstNumberChar + lastNumberChar);
        int concatInt = Character.getNumericValue(concat);
        return String.valueOf(number).length() >= 3 && number % concatInt == 0;
    }

    public static void properties(long number) {
        List<String> whichProperties = new ArrayList<>();
        if (isEven(number)) {
            whichProperties.add("even");
        }
        if (isOdd(isEven(number))) {
            whichProperties.add("odd");
        }
        if (isBuzz(number)) {
            whichProperties.add("buzz");
        }
        if (isDuck(number)) {
            whichProperties.add("duck");
        }
        if (isPalindrome(number)) {
            whichProperties.add("palindrome");
        }
        if (isGapful(number)) {
            whichProperties.add("gapful");
        }
        System.out.print(String.join(",", whichProperties));
    }
}
